#!/bin/sh
# bin/compile <build-dir> <cache-dir>
set -e

# Used to format the output based on heroku guidelines
# https://devcenter.heroku.com/articles/buildpack-api#style
indent() {
  RE="s/^/       /"
  sed $SED_FLAG "$RE"
}

BUILD_DIR=$1
CACHE_DIR=$2

# Hugo version
VERSION="0.14"

# Hugo URL ( download from GH builds )
ARCHIVE_NAME=hugo_${VERSION}_linux_amd64
FILE_NAME=${ARCHIVE_NAME}.tar.gz
HUGO_PACKAGE=https://github.com/spf13/hugo/releases/download/v${VERSION}/${FILE_NAME}

# Store the hugo package in the cache_dir ( persistent across builds )
mkdir -p $CACHE_DIR
if ! [ -e $CACHE_DIR/$FILE_NAME ]; then
  echo "\n-----> Fetching Hugo ${VERSION} binaries at ${HUGO_PACKAGE}"
  curl $HUGO_PACKAGE -L -s -o $CACHE_DIR/$FILE_NAME | indent
fi

# Extract the binary in the working directory
echo "\n-----> Extracting Hugo ${VERSION} binaries to ${BUILD_DIR}/vendor/hugo"
mkdir -p $CACHE_DIR/$ARCHIVE_NAME | indent
tar -zxvf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR | indent
mv $CACHE_DIR/$ARCHIVE_NAME/$ARCHIVE_NAME $BUILD_DIR/hugo | indent

# Fetch a theme specified in the .hugotheme file
if [ -e $BUILD_DIR/.hugotheme ]; then
  echo "\n-----> Getting the theme"
  THEME_URL="`cat $BUILD_DIR/.hugotheme`"
  rm -rf $BUILD_DIR/themes && mkdir $BUILD_DIR/themes && cd $BUILD_DIR/themes
  git clone $THEME_URL
fi

NODE_VERSION=$(curl --silent --get --data-urlencode "range=${semver_range}" https://semver.io/node/resolve)

# Download node from Heroku's S3 mirror of nodejs.org/dist
echo "\n-----> Downloading and installing node"
NODE_URL="http://s3pository.heroku.com/node/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"
curl $NODE_URL -s -o - | tar xzf - -C $BUILD_DIR

# Move node (and npm) into ./vendor and make them executable
mkdir -p $BUILD_DIR/vendor
mv $BUILD_DIR/node-v$NODE_VERSION-linux-x64 $BUILD_DIR/vendor/node
chmod +x $BUILD_DIR/vendor/node/bin/*
PATH=$PATH:$BUILD_DIR/vendor/node/bin


# Install npm dependencies

cd $BUILD_DIR/themes/crowdsite/

(
  echo "\n-----> Installing dependencies"
  # Make npm output to STDOUT instead of its default STDERR
  npm install 2>&1 | indent
)

# Compile assets
echo "\n-----> Compiling assets with gulp"
$BUILD_DIR/themes/crowdsite/node_modules/.bin/gulp sass
$BUILD_DIR/themes/crowdsite/node_modules/.bin/gulp scripts

# Add revision to assets
$BUILD_DIR/themes/crowdsite/node_modules/.bin/gulp rev
$BUILD_DIR/themes/crowdsite/node_modules/.bin/gulp rev-layouts
$BUILD_DIR/themes/crowdsite/node_modules/.bin/gulp rev-html
$BUILD_DIR/themes/crowdsite/node_modules/.bin/gulp rev-css

# Build the site
echo "\n-----> Building the site"
cd $BUILD_DIR
mkdir -p static | indent
./hugo | indent
